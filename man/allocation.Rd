% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allocation.R
\name{allocation}
\alias{allocation}
\title{Allocation}
\usage{
allocation(Nh, Gamma, sigma_u, sigma_e, Vd_star, n0 = 1, seed = 1234)
}
\arguments{
\item{Nh}{Nh vector}

\item{Gamma}{Gamma matrix with partitions}

\item{sigma_u}{Sigma U variance}

\item{sigma_e}{Sigma E variance}

\item{Vd_star}{Costrain values}

\item{n0}{Starting value}

\item{seed}{Seed}
}
\value{
A list
\describe{
\item{nh}{nh optimal allocation}
\item{nd}{nd optimal allocation}
\item{nloptr}{nloptr object}
\item{conv}{Dataframe with convergence of the optimization algoritm}
}
}
\description{
This package implements a proper statistical setting for defining
the sampling design for a small area estimation problem.
The general random sampling framework is based
on sampling without replacement and with varying inclusion probabilities.
The sample is selected with the cube method based on
balancing sampling equations useful in the small area situation.
This method allows to obtain the minimum-cost sampling solution.
}
\examples{
Nh <-saeall_sample$data$Nh
Gamma <- saeall_sample$Gamma
sigma_u <- saeall_sample$sigma_u
sigma_e <- saeall_sample$sigma_e
data <- saeall_sample$data
Nd<-t(Gamma) \%*\% Nh
cv <- c(rep(0.07, times=49), 0.05, 0.05)
med<- data$occ_stat_2/Nh
med <- c(med, mean(med), mean(med))
Vd_star<-cv^2*(t(Nd)*med)^2

res <- allocation(Nh, Gamma, sigma_u, sigma_e, Vd_star)
res
}
